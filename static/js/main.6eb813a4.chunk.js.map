{"version":3,"sources":["auth/domain/services/logout.js","menu/ui/AppMenuContext.js","menu/ui/AppMenu.js","SimpleAppBar.js","Page.js","PageWithAppBar.js","companies/ui/constants.js","shared/date/toISOString.js","companies/domain/models/Company.js","shared/date/formatDate.js","companies/ui/table/CompaniesTableItem.js","risks/domain/models/Risk.js","risks/domain/models/RisksCollection.js","companies/ui/table/CompaniesTable.js","AppContext.js","companies/ui/CompaniesTablePage.js","FormPage.js","form/ui/validators.js","companies/ui/form/CompanyForm.js","companies/ui/EditCompanyPage.js","companies/ui/CreateCompanyPage.js","companies/domain/data/CompaniesStore.js","companies/domain/services/CompaniesService.js","auth/domain/errors/UserNotFoundError.js","auth/domain/errors/IncorrectPasswordError.js","auth/domain/services/authenticate.js","auth/ui/form/LoginForm.js","auth/ui/LoginPage.js","auth/domain/services/isAuthenticated.js","auth/ui/SecureRoute.js","risks/domain/data/RisksStore.js","risks/domain/services/RisksService.js","App.js","serviceWorker.js","index.js"],"names":["logout","localStorage","removeItem","AppMenuContext","createContext","openMenu","AppMenu","_ref","classes","children","history","_useState","useState","_useState2","Object","slicedToArray","isOpened","setIsOpened","react_default","a","createElement","ui_AppMenuContext","Provider","value","Drawer_default","open","onClose","List_default","className","list","ListItem_default","button","onClick","replace","pathname","defaultProps","withRouter","withStyles","width","SimpleAppBar","props","title","useContext","Fragment","AppBar_default","position","Toolbar_default","IconButton_default","menuButton","color","aria-label","Menu_default","Typography_default","variant","ui_AppMenu","theme","flexGrow","marginLeft","marginRight","buttonIconLeft","spacing","unit","root","display","flexFlow","height","classnames","PageWithAppBar","appBar","isLoading","src_Page","gridContainer","CircularProgress_default","progress","src_SimpleAppBar","maxHeight","overflow","alignSelf","margin","PropTypes","shape","charterCapital","number","isRequired","id","string","name","lastUpdated","instanceOf","Date","foundationDate","toISOString","date","getId","_ref3","getName","_ref4","getFoundationDate","_ref5","formatDate","format","CompaniesTableItem","company","onRecalculate","risk","companyId","TableRow_default","TableCell_default","component","scope","align","concat","Tooltip_default","react_router_dom","to","Edit_default","fontSize","Refresh_default","create","cuid","createdDate","lastUpdatedDate","update","_ref2","objectSpread","getByCompanyId","risks","find","CompaniesTable","companies","onAddButtonClick","Paper_default","Table_default","table","TableHead_default","TableBody_default","map","key","Fab_default","fab","Add_default","overflowX","minWidth","bottom","right","AppContext","services","CompaniesTablePage","state","setState","_useContext$services","companiesService","risksService","fetchCompanies","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","getCompanies","sent","stop","apply","this","arguments","fetchRisks","_callee2","_context2","getList","useEffect","subscribe","unsubscribe","src_PageWithAppBar","table_CompaniesTable","push","categoryId","calculate","justifyContent","paddingTop","formContainer","flex","maxWidth","restProps","objectWithoutProperties","assign","Grid_default","container","direction","Typography","item","required","Boolean","undefined","isDataValid","isValid","CompanyForm","onReset","onSubmit","formattedCompany","useMemo","react_final_form_es","initialValues","values","Number","handleSubmit","submitting","validate","input","_ref3$meta","meta","error","touched","TextField_default","autoFocus","fullWidth","helperText","label","_ref4$meta","placeholder","_ref5$meta","type","justify","Button_default","disabled","EditCompanyPage","match","params","companyName","fetchCompany","result","getCompanyById","finish","editCompany","_x","src_FormPage","e","preventDefault","CreateCompanyPage","createCompany","stopPropagation","CompaniesStore","_ref$parseList","parseList","JSON","parse","_ref$formatList","formatList","stringify","Promise","resolve","getItem","getById","_getById","abrupt","saveItem","_saveItem","updatedList","toConsumableArray","saveList","_x2","updateItem","_updateItem","_callee3","_context3","i","_x3","setItem","CompaniesService","companiesStore","data","updatedCompany","UserNotFoundError","login","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","Error","IncorrectPasswordError","authenticate","reject","password","LoginForm","submitError","alignContent","xs","form","t0","message","defineProperty","FORM_ERROR","paragraph","form_LoginForm","isAuthenticated","SecureRoute","react_router","RisksStore","_getByCompanyId2","RisksService","listener","risksStore","_calculate","min","max","Math","ceil","floor","random","l","App","src_AppContext","path","LoginPage","ui_SecureRoute","exact","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6eb813a4.chunk.js","sourcesContent":["function logout() {\r\n  localStorage.removeItem('isAuthenticated');\r\n}\r\n\r\nexport default logout;\r\n","import { createContext } from 'react';\r\n\r\nconst AppMenuContext = createContext({ openMenu: null });\r\n\r\nexport default AppMenuContext;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport List from \"@material-ui/core/List/index\";\r\nimport ListItem from \"@material-ui/core/ListItem/index\";\r\nimport Drawer from \"@material-ui/core/Drawer/index\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\nimport logout from \"../../auth/domain/services/logout\";\r\n\r\nimport AppMenuContext from './AppMenuContext';\r\n\r\n\r\nconst styles = {\r\n  list: {\r\n    width: '250px',\r\n  },\r\n};\r\n\r\nfunction AppMenu({ classes, children, history }) {\r\n  const [isOpened, setIsOpened] = useState(false);\r\n\r\n  const openMenu = () => {\r\n    setIsOpened(true);\r\n  };\r\n\r\n  const onLogoutClick = () => {\r\n    logout();\r\n    history.replace({ pathname: '/login' });\r\n  };\r\n\r\n  return (\r\n    <AppMenuContext.Provider\r\n      value={{\r\n        openMenu,\r\n      }}\r\n    >\r\n      <Drawer\r\n        open={isOpened}\r\n        onClose={() => setIsOpened(false)}\r\n      >\r\n        <List className={classes.list}>\r\n          <ListItem button onClick={onLogoutClick}>\r\n            Logout\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n      { children }\r\n    </AppMenuContext.Provider>\r\n  )\r\n}\r\n\r\n\r\nAppMenu.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  onLogout: PropTypes.func,\r\n  open: PropTypes.bool,\r\n};\r\n\r\nAppMenu.defaultProps = {\r\n  open: false,\r\n};\r\n\r\nexport default withRouter(withStyles(styles)(AppMenu));\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport SimpleDrawer from \"./menu/ui/AppMenu\";\r\nimport AppMenuContext from \"./menu/ui/AppMenuContext\";\r\n\r\nconst styles = theme => ({\r\n  title: {\r\n    flexGrow: 1\r\n  },\r\n  menuButton: {\r\n    marginLeft: -12,\r\n    marginRight: 20\r\n  },\r\n  buttonIconLeft: {\r\n    marginRight: theme.spacing.unit\r\n  }\r\n});\r\n\r\nfunction SimpleAppBar(props) {\r\n  const { classes, title } = props;\r\n  const { openMenu } = useContext(AppMenuContext);\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"Menu\"\r\n            onClick={openMenu}\r\n          >\r\n            <MenuIcon/>\r\n          </IconButton>\r\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.title}>\r\n            {title}\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <SimpleDrawer />\r\n    </>\r\n  );\r\n}\r\n\r\nSimpleAppBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  title: PropTypes.string\r\n};\r\n\r\nSimpleAppBar.defaultProps = {\r\n  title: \"Logistics Risks Calculator\"\r\n};\r\n\r\nexport default withStyles(styles)(SimpleAppBar);\r\n","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\nconst styles = {\r\n  root: {\r\n    display: 'flex',\r\n    flexFlow: 'column nowrap',\r\n    flexGrow: 1,\r\n    height: '100%',\r\n  },\r\n};\r\n\r\nfunction Page({ className, classes, children }) {\r\n  return <div className={classnames(classes.root, className)}>{ children }</div>\r\n}\r\n\r\nexport default withStyles(styles)(Page);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nimport SimpleAppBar from './SimpleAppBar';\r\nimport Page from './Page';\r\n\r\n\r\nconst styles = {\r\n  gridContainer: {\r\n    display: 'flex',\r\n    flexGrow: 1,\r\n    maxHeight: '100%',\r\n    overflow: 'auto',\r\n  },\r\n  progress: {\r\n    alignSelf: 'center',\r\n    margin: 'auto',\r\n  },\r\n};\r\n\r\n\r\nfunction PageWithAppBar({ appBar, className, classes, children, isLoading }) {\r\n  return (\r\n    <Page className={className}>\r\n      { appBar }\r\n      <div className={classes.gridContainer}>\r\n        {isLoading ? <CircularProgress className={classes.progress}/> : children}\r\n      </div>\r\n    </Page>\r\n  )\r\n}\r\n\r\nPageWithAppBar.propTypes = {\r\n  appBar: PropTypes.node,\r\n  children: PropTypes.node,\r\n  className: PropTypes.string,\r\n  classes: PropTypes.object.isRequired,\r\n  isLoading: PropTypes.bool,\r\n};\r\n\r\nPageWithAppBar.defaultProps = {\r\n  appBar: <SimpleAppBar />,\r\n  isLoading: false,\r\n};\r\n\r\nexport default withStyles(styles)(PageWithAppBar);\r\n","import PropTypes from 'prop-types';\r\n\r\nexport const COMPANY_SHAPE = PropTypes.shape({\r\n  charterCapital: PropTypes.number.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  lastUpdated: PropTypes.instanceOf(Date),\r\n  foundationDate: PropTypes.string.isRequired,\r\n});\r\n","export default function toISOString(date) {\r\n  return date.toISOString();\r\n}\r\n","import cuid from 'cuid';\r\nimport toISOString from \"../../../shared/date/toISOString\";\r\n\r\n\r\nexport const create = ({ name, foundationDate, charterCapital }) => ({\r\n  id: cuid(),\r\n  charterCapital,\r\n  foundationDate,\r\n  lastUpdatedDate: null,\r\n  name,\r\n  createdDate: toISOString(new Date()),\r\n});\r\n\r\nexport const update = ({ name, foundationDate, charterCapital }, company) => ({\r\n  ...company,\r\n  charterCapital,\r\n  foundationDate,\r\n  lastUpdatedDate: toISOString(new Date()),\r\n  name,\r\n});\r\n\r\nexport const getId = ({ id }) => id;\r\n\r\nexport const getName = ({ name }) => name;\r\n\r\nexport const getFoundationDate = ({ foundationDate }) => foundationDate;\r\n","import format from \"date-fns/format\";\r\n\r\nexport default function formatDate(date) {\r\n  return format(date, 'MM/DD/YYYY');\r\n}\r\n","import React from \"react\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport Tooltip from \"@material-ui/core/Tooltip\";\r\nimport { Link } from \"react-router-dom\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nimport formatDate from \"../../../shared/date/formatDate\";\r\n\r\nimport { getFoundationDate, getId, getName } from \"../../domain/models/Company\";\r\n\r\n\r\nexport default function CompaniesTableItem({ company, onRecalculate, risk }) {\r\n  const companyId = getId(company);\r\n  return (\r\n    <TableRow>\r\n      <TableCell component=\"th\" scope=\"row\">\r\n        {getName(company)}\r\n      </TableCell>\r\n      <TableCell align=\"center\">{ risk ? `${risk.value}%` : '-' }</TableCell>\r\n      <TableCell align=\"center\">{formatDate(getFoundationDate(company))}</TableCell>\r\n      <TableCell align=\"right\">\r\n        <Tooltip title=\"Edit\">\r\n          <Link to={`/company/${getId(company)}`}>\r\n            <IconButton aria-label=\"Recalculate\">\r\n              <EditIcon fontSize=\"small\"/>\r\n            </IconButton>\r\n          </Link>\r\n        </Tooltip>\r\n        <Tooltip title=\"Recalculate\">\r\n          <IconButton aria-label=\"Recalculate\" onClick={() => onRecalculate(companyId)}>\r\n            <RefreshIcon fontSize=\"small\"/>\r\n          </IconButton>\r\n        </Tooltip>\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n","import cuid from \"cuid\";\r\n\r\nimport toISOString from \"../../../shared/date/toISOString\";\r\n\r\n\r\nexport const create = ({ companyId, value }) => ({\r\n  id: cuid(),\r\n  value,\r\n  companyId,\r\n  createdDate: toISOString(new Date()),\r\n  lastUpdatedDate: null,\r\n});\r\n\r\nexport const update = ({ value }, risk) => ({\r\n  ...risk,\r\n  value,\r\n  lastUpdatedDate: toISOString(new Date()),\r\n});\r\n\r\nexport const getId = ({ id }) => id;\r\n\r\nexport const getCompanyId = ({ companyId }) => companyId;\r\n\r\nexport const getValue = ({ value }) => value;\r\n","import { getCompanyId } from \"./Risk\";\r\n\r\nexport const getByCompanyId = (companyId, risks) => risks.find(risk => getCompanyId(risk) === companyId);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles/index\";\r\nimport Table from \"@material-ui/core/Table/index\";\r\nimport TableBody from \"@material-ui/core/TableBody/index\";\r\nimport TableCell from \"@material-ui/core/TableCell/index\";\r\nimport TableHead from \"@material-ui/core/TableHead/index\";\r\nimport TableRow from \"@material-ui/core/TableRow/index\";\r\nimport Fab from \"@material-ui/core/Fab/index\";\r\nimport Paper from \"@material-ui/core/Paper/index\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nimport { COMPANY_SHAPE } from \"../constants\";\r\nimport { getId } from \"../../domain/models/Company\";\r\nimport CompaniesTableItem from \"./CompaniesTableItem\";\r\nimport { getByCompanyId } from \"../../../risks/domain/models/RisksCollection\";\r\n\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    overflowX: \"auto\"\r\n  },\r\n  table: {\r\n    minWidth: 700\r\n  },\r\n  fab: {\r\n    position: \"absolute\",\r\n    bottom: theme.spacing.unit * 4,\r\n    right: theme.spacing.unit * 4\r\n  }\r\n});\r\n\r\nfunction CompaniesTable(props) {\r\n  const { classes, companies, onAddButtonClick, onRecalculate, risks } = props;\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table}>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Company name</TableCell>\r\n            <TableCell align=\"center\">Risk</TableCell>\r\n            <TableCell align=\"center\">Foundation date</TableCell>\r\n            <TableCell/>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {companies.map((company) => {\r\n            const companyId = getId(company);\r\n            return (\r\n              <CompaniesTableItem\r\n                company={company}\r\n                key={companyId}\r\n                onRecalculate={onRecalculate}\r\n                risk={getByCompanyId(companyId, risks)}\r\n              />\r\n            );\r\n          })\r\n          }\r\n        </TableBody>\r\n      </Table>\r\n      <Fab\r\n        className={classes.fab}\r\n        color=\"primary\"\r\n        onClick={onAddButtonClick}\r\n      >\r\n        <AddIcon/>\r\n      </Fab>\r\n    </Paper>\r\n  );\r\n}\r\n\r\nCompaniesTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  companies: PropTypes.arrayOf(COMPANY_SHAPE),\r\n  onAddButtonClick: PropTypes.func,\r\n  onRecalculate: PropTypes.func,\r\n  risks: PropTypes.array\r\n};\r\n\r\nCompaniesTable.defaultProps = {\r\n  companies: [],\r\n  risks: []\r\n};\r\n\r\nexport default withStyles(styles)(CompaniesTable);\r\n","import { createContext } from 'react';\r\n\r\n\r\nconst AppContext = createContext({\r\n  services: {},\r\n});\r\n\r\nexport default AppContext;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\n\r\nimport PageWithAppBar from \"../../PageWithAppBar\";\r\n\r\nimport CompaniesTable from \"./table/CompaniesTable\";\r\nimport AppMenu from \"../../menu/ui/AppMenu\";\r\nimport AppContext from \"../../AppContext\";\r\n\r\n\r\nfunction CompaniesTablePage({ history }) {\r\n  const [state, setState] = useState({\r\n    companies: [],\r\n    isLoading: false,\r\n    risks: [],\r\n  });\r\n  const { services: { companies: companiesService, risks: risksService } } = useContext(AppContext);\r\n\r\n  const fetchCompanies = async () => {\r\n    setState({ isLoading: true });\r\n    const companies = await companiesService.getCompanies();\r\n    setState({\r\n      companies,\r\n      isLoading: false\r\n    });\r\n  };\r\n\r\n  const fetchRisks = async () => {\r\n    const risks = await risksService.getList();\r\n    setState(state => ({ ...state, risks }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCompanies();\r\n    risksService.subscribe(() => {\r\n      fetchRisks();\r\n    });\r\n    fetchRisks();\r\n    return () => {\r\n      risksService.unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  const onAddButtonClick = () => {\r\n    history.push({ pathname: '/company/' });\r\n  };\r\n\r\n  const onRecalculate = (categoryId) => {\r\n    risksService.calculate(categoryId);\r\n  };\r\n\r\n  return (\r\n    <AppMenu>\r\n      <PageWithAppBar\r\n        isLoading={state.isLoading}\r\n      >\r\n        <CompaniesTable\r\n          companies={state.companies}\r\n          onAddButtonClick={onAddButtonClick}\r\n          onRecalculate={onRecalculate}\r\n          risks={state.risks}\r\n        />\r\n      </PageWithAppBar>\r\n    </AppMenu>\r\n  );\r\n}\r\n\r\nexport default CompaniesTablePage;\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\nimport PageWithAppBar from \"./PageWithAppBar\";\r\n\r\n\r\nconst styles = ({ spacing }) => ({\r\n  gridContainer: {\r\n    justifyContent: 'center',\r\n    paddingTop: spacing.unit * 4,\r\n  },\r\n  formContainer: {\r\n    flex: 1,\r\n    maxWidth: '360px',\r\n  },\r\n});\r\n\r\nfunction FormPage({ children, classes, isLoading, title, ...restProps }) {\r\n  return (\r\n    <PageWithAppBar\r\n      {...restProps}\r\n      classes={{ gridContainer: classes.gridContainer }}\r\n      isLoading={isLoading}\r\n    >\r\n      <Grid\r\n        className={classes.formContainer}\r\n        container\r\n        direction=\"column\"\r\n        spacing={40}\r\n      >\r\n        <Grid\r\n          component={Typography}\r\n          item\r\n          variant=\"title\"\r\n        >\r\n          {title}\r\n        </Grid>\r\n        <Grid item>\r\n          {isLoading ? null : children}\r\n        </Grid>\r\n      </Grid>\r\n    </PageWithAppBar>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(FormPage);\r\n","import isValid from 'date-fns/is_valid';\r\n\r\nexport const required = (value) => Boolean(value) ? undefined : 'Value is required';\r\nexport const isDataValid = (value) => isValid(new Date(value)) ? undefined : 'Date should be in format MM/DD/YYYY';\r\n","import React, { useMemo } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Form, Field } from \"react-final-form\";\r\n\r\nimport { required, isDataValid } from '../../../form/ui/validators';\r\n\r\nimport { getFoundationDate } from \"../../domain/models/Company\";\r\n\r\nimport { COMPANY_SHAPE } from \"../constants\";\r\nimport formatDate from \"../../../shared/date/formatDate\";\r\n\r\n\r\nexport default function CompanyForm({ company, onReset, onSubmit }) {\r\n  const onSubmitAdapter = (values) => {\r\n    onSubmit({\r\n      ...values,\r\n      foundationDate: new Date(values.foundationDate),\r\n      charterCapital: Number(values.charterCapital),\r\n    });\r\n  };\r\n\r\n  const formattedCompany = useMemo(() => {\r\n    if (!company) {\r\n      return company;\r\n    }\r\n\r\n    return {\r\n      ...company,\r\n      foundationDate: formatDate(getFoundationDate(company)),\r\n    };\r\n  }, [company]);\r\n\r\n  return (\r\n    <Form initialValues={formattedCompany} onSubmit={onSubmitAdapter} >\r\n      {({ handleSubmit, submitting }) => (\r\n        <Grid\r\n          component=\"form\"\r\n          container\r\n          direction=\"column\"\r\n          onReset={onReset}\r\n          onSubmit={handleSubmit}\r\n          spacing={40}\r\n        >\r\n          <Grid item>\r\n            <Field\r\n              name=\"name\"\r\n              validate={required}\r\n            >\r\n              {({ input, meta: { error, touched } }) => (\r\n                <TextField\r\n                  {...input}\r\n                  autoFocus\r\n                  error={touched && Boolean(error)}\r\n                  fullWidth\r\n                  helperText={touched && error}\r\n                  label=\"Name\"\r\n                />\r\n              )}\r\n            </Field>\r\n          </Grid>\r\n          <Grid item>\r\n            <Field\r\n              name=\"foundationDate\"\r\n              validate={value => required(value) || isDataValid(value)}\r\n            >\r\n              {({ input, meta: { error, touched } }) => (\r\n                <TextField\r\n                  {...input}\r\n                  error={touched && Boolean(error)}\r\n                  fullWidth\r\n                  helperText={touched && error}\r\n                  label=\"Foundation date\"\r\n                  placeholder=\"2/25/2012\"\r\n                />\r\n              )}\r\n            </Field>\r\n          </Grid>\r\n          <Grid item>\r\n            <Field\r\n              name=\"charterCapital\"\r\n              validate={required}\r\n            >\r\n              {({ input, meta: { error, touched } }) => (\r\n                <TextField\r\n                  {...input}\r\n                  error={touched && Boolean(error)}\r\n                  fullWidth\r\n                  helperText={touched && error}\r\n                  label=\"Charter capital\"\r\n                  type=\"number\"\r\n                />\r\n              )}\r\n            </Field>\r\n          </Grid>\r\n          <Grid item>\r\n            <Grid\r\n              container\r\n              justify=\"flex-end\"\r\n              spacing={16}\r\n            >\r\n              <Grid item>\r\n                <Button type=\"reset\">\r\n                  Cancel\r\n                </Button>\r\n              </Grid>\r\n              <Grid item>\r\n                <Button\r\n                  color=\"primary\"\r\n                  disabled={submitting}\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                >\r\n                  Submit\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </Form>\r\n  );\r\n}\r\n\r\nCompanyForm.propTypes = {\r\n  company: COMPANY_SHAPE,\r\n  onReset: PropTypes.func.isRequired,\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport SimpleAppBar from \"../../SimpleAppBar\";\r\n\r\nimport AppMenu from \"../../menu/ui/AppMenu\";\r\nimport FormPage from \"../../FormPage\";\r\nimport CompanyForm from \"./form/CompanyForm\";\r\nimport AppContext from \"../../AppContext\";\r\n\r\n\r\nfunction EditCompanyPage({ match, history }) {\r\n  const [state, setState] = useState({\r\n    company: null,\r\n    isLoading: true\r\n  });\r\n  const { services: { companies: companiesService } } = useContext(AppContext);\r\n\r\n  const companyId = match.params.id;\r\n  const { company, isLoading } = state;\r\n\r\n  const companyName = isLoading ? '' : company.name;\r\n\r\n  const fetchCompany = async () => {\r\n    setState(state => ({ ...state, isLoading: true }));\r\n    try {\r\n      const result = await companiesService.getCompanyById(companyId);\r\n      setState(state => ({\r\n        ...state,\r\n        company: result\r\n      }));\r\n    } finally {\r\n      setState(state => ({\r\n        ...state,\r\n        isLoading: false\r\n      }));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCompany();\r\n  }, []);\r\n\r\n  const appBar = (\r\n    <SimpleAppBar\r\n      title={isLoading ? \"Please wait...\" : companyName}\r\n    />\r\n  );\r\n\r\n  const onReset = (e) => {\r\n    e.preventDefault();\r\n    history.replace({ pathname: '/' });\r\n  };\r\n\r\n  const onSubmit = async (values) => {\r\n    await companiesService.editCompany(company, values);\r\n    history.replace({ pathname: '/' });\r\n  };\r\n\r\n  return (\r\n    <AppMenu>\r\n      <FormPage\r\n        appBar={appBar}\r\n        isLoading={state.isLoading}\r\n        title={`Edit ${companyName}`}\r\n      >\r\n        <CompanyForm\r\n          company={company}\r\n          onReset={onReset}\r\n          onSubmit={onSubmit}\r\n        />\r\n      </FormPage>\r\n    </AppMenu>\r\n  );\r\n}\r\n\r\nEditCompanyPage.propTypes = {\r\n  match: PropTypes.shape({\r\n    params: PropTypes.shape({\r\n      id: PropTypes.string.isRequired\r\n    }).isRequired\r\n  }).isRequired,\r\n  history: PropTypes.shape({\r\n    goBack: PropTypes.func,\r\n  }).isRequired,\r\n};\r\n\r\nexport default EditCompanyPage;\r\n","import React, { useContext } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport SimpleAppBar from \"../../SimpleAppBar\";\r\n\r\nimport AppMenu from \"../../menu/ui/AppMenu\";\r\nimport FormPage from \"../../FormPage\";\r\nimport CompanyForm from \"./form/CompanyForm\";\r\nimport AppContext from \"../../AppContext\";\r\n\r\n\r\nfunction CreateCompanyPage({ history }) {\r\n  const { services: { companies } } = useContext(AppContext);\r\n\r\n  const appBar = (\r\n    <SimpleAppBar\r\n      title=\"Create new company\"\r\n    />\r\n  );\r\n\r\n  const onReset = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    history.replace('/');\r\n  };\r\n\r\n  const onSubmit = async (values) => {\r\n    await companies.createCompany(values);\r\n    history.replace('/');\r\n  };\r\n\r\n  return (\r\n    <AppMenu>\r\n      <FormPage\r\n        appBar={appBar}\r\n        title={`Create new company`}\r\n      >\r\n        <CompanyForm\r\n          onReset={onReset}\r\n          onSubmit={onSubmit}\r\n        />\r\n      </FormPage>\r\n    </AppMenu>\r\n  );\r\n}\r\n\r\nCreateCompanyPage.propTypes = {\r\n  history: PropTypes.shape({\r\n    goBack: PropTypes.func,\r\n  }).isRequired,\r\n};\r\n\r\nexport default CreateCompanyPage;\r\n","import { getId } from \"../models/Company\";\r\n\r\n\r\nconst CompaniesStore = ({ localStorage, parseList = JSON.parse, formatList = JSON.stringify }) => ({\r\n  getList() {\r\n    return Promise.resolve(parseList(localStorage.getItem('companies')) || []);\r\n  },\r\n  async getById(id) {\r\n    const list = await this.getList();\r\n    return Promise.resolve(list.find(item => getId(item) === id));\r\n  },\r\n  async saveItem(item) {\r\n    const list = await this.getList();\r\n    const updatedList = [...list, item];\r\n    return this.saveList(updatedList);\r\n  },\r\n  async updateItem(item) {\r\n    const list = await this.getList();\r\n    const updatedList = list.map((i) => {\r\n      if (getId(i) !== getId(item)) {\r\n        return i;\r\n      }\r\n\r\n      return item;\r\n    });\r\n    return this.saveList(updatedList);\r\n  },\r\n  saveList(list) {\r\n    localStorage.setItem('companies', formatList(list));\r\n    return Promise.resolve();\r\n  },\r\n});\r\n\r\nexport default CompaniesStore;\r\n","import { create, update } from \"../models/Company\";\r\n\r\nconst CompaniesService = ({ companiesStore }) => ({\r\n  createCompany: (data) => {\r\n    const company = create(data);\r\n    return companiesStore.saveItem(company);\r\n  },\r\n  editCompany: (company, data) => {\r\n    const updatedCompany = update(data, company);\r\n    return companiesStore.updateItem(updatedCompany);\r\n  },\r\n  getCompanies: () => companiesStore.getList(),\r\n  getCompanyById: (id) => companiesStore.getById(id),\r\n});\r\n\r\nexport default CompaniesService;\r\n","export default class UserNotFoundError extends Error {\r\n  constructor(login) {\r\n    super(`User \"${login}\" doesn't exist`);\r\n  }\r\n}\r\n","export default class IncorrectPasswordError extends Error {\r\n  constructor() {\r\n    super(`Invalid password`);\r\n  }\r\n}\r\n","import UserNotFoundError from '../errors/UserNotFoundError';\r\nimport IncorrectPasswordError from \"../errors/IncorrectPasswordError\";\r\n\r\nfunction authenticate(values) {\r\n  return new Promise((resolve, reject) => {\r\n    const { login, password } = values;\r\n\r\n    if (login !== \"admin\") {\r\n      reject(new UserNotFoundError(login));\r\n      return;\r\n    } else if (password !== \"admin\") {\r\n      reject(new IncorrectPasswordError());\r\n      return;\r\n    }\r\n\r\n    localStorage.setItem('isAuthenticated', 'true');\r\n\r\n    resolve();\r\n  });\r\n}\r\n\r\nexport default authenticate;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { required } from '../../../form/ui/validators';\r\n\r\n\r\nfunction LoginForm({ className, onSubmit }) {\r\n  return (\r\n    <Form onSubmit={onSubmit}>\r\n      {({ handleSubmit, submitError, submitting }) => (\r\n        <Grid\r\n          alignContent=\"center\"\r\n          className={className}\r\n          component=\"form\"\r\n          container\r\n          onSubmit={handleSubmit}\r\n          spacing={40}\r\n        >\r\n          {submitError ? (\r\n            <Grid\r\n              color=\"error\"\r\n              component={Typography}\r\n              item\r\n              xs={12}\r\n            >\r\n              {submitError}\r\n            </Grid>\r\n          ) : null}\r\n\r\n          <Grid item xs={12}>\r\n            <Field\r\n              name=\"login\"\r\n              validate={required}\r\n            >\r\n              {({ input, meta: { error, touched, submitError } }) => (\r\n                <TextField\r\n                  {...input}\r\n                  autoFocus\r\n                  error={touched && Boolean(error || submitError)}\r\n                  fullWidth\r\n                  helperText={touched && (error || submitError)}\r\n                  placeholder=\"Login\"\r\n                />\r\n              )}\r\n            </Field>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Field\r\n              name=\"password\"\r\n              validate={required}\r\n            >\r\n              {({ input, meta: { error, touched } }) => (\r\n                <TextField\r\n                  {...input}\r\n                  error={touched && Boolean(error)}\r\n                  fullWidth\r\n                  helperText={touched && error}\r\n                  placeholder=\"Password\"\r\n                  type=\"password\"\r\n                />\r\n              )}\r\n            </Field>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <Button\r\n              color=\"primary\"\r\n              disabled={submitting}\r\n              fullWidth\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n            >\r\n              Submit\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n    </Form>\r\n  );\r\n}\r\n\r\nLoginForm.propTypes = {\r\n  className: PropTypes.string,\r\n  onSubmit: PropTypes.func.isRequired\r\n};\r\n\r\nLoginForm.defaultProps = {\r\n  className: \"\"\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from \"react\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { FORM_ERROR } from \"final-form\";\r\n\r\nimport Page from '../../Page';\r\n\r\nimport authenticate from '../domain/services/authenticate';\r\n\r\nimport LoginForm from './form/LoginForm';\r\nimport UserNotFoundError from \"../domain/errors/UserNotFoundError\";\r\nimport IncorrectPasswordError from \"../domain/errors/IncorrectPasswordError\";\r\n\r\n\r\nconst styles = (theme) => ({\r\n  root: {\r\n    paddingTop: theme.spacing.unit * 8,\r\n  },\r\n  form: {\r\n    margin: `${theme.spacing.unit * 8}px auto`,\r\n    maxWidth: '360px',\r\n  }\r\n});\r\n\r\nfunction LoginPage({ classes, history }) {\r\n  const onSubmit = async (values) => {\r\n    try {\r\n      await authenticate(values);\r\n      history.replace({ pathname: '/' });\r\n    } catch(e) {\r\n      if (e instanceof UserNotFoundError) {\r\n        return { login: e.message };\r\n      } else if (e instanceof IncorrectPasswordError) {\r\n        return { [FORM_ERROR]: 'Incorrect credentials' };\r\n      }\r\n\r\n      throw e;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Page classes={{ root: classes.root }}>\r\n      <Typography\r\n        align=\"center\"\r\n        paragraph={false}\r\n        variant=\"title\"\r\n      >\r\n        Welcome\r\n      </Typography>\r\n\r\n      <Typography\r\n        align=\"center\"\r\n        color=\"textSecondary\"\r\n      >\r\n        to\r\n      </Typography>\r\n\r\n      <Typography\r\n        align=\"center\"\r\n        color=\"primary\"\r\n        variant=\"headline\"\r\n      >\r\n        Logistics Risks Calculator\r\n      </Typography>\r\n\r\n      <LoginForm\r\n        className={classes.form}\r\n        onSubmit={onSubmit}\r\n      />\r\n    </Page>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(LoginPage);\r\n","function isAuthenticated() {\r\n  return localStorage.getItem('isAuthenticated') === 'true';\r\n}\r\n\r\nexport default isAuthenticated;\r\n","import React from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport isAuthenticated from \"../domain/services/isAuthenticated\";\r\n\r\nfunction SecureRoute({ children }) {\r\n  if (!isAuthenticated()) {\r\n    return (\r\n      <Redirect\r\n        to={{\r\n          pathname: '/login',\r\n        }}\r\n      />\r\n    )\r\n  }\r\n\r\n  return children;\r\n}\r\n\r\nexport default SecureRoute;\r\n","import { getId } from \"../models/Risk\";\r\nimport { getByCompanyId } from \"../models/RisksCollection\";\r\n\r\n\r\nconst RisksStore = ({ localStorage, parseList = JSON.parse, formatList = JSON.stringify }) => ({\r\n  getList() {\r\n    return Promise.resolve(parseList(localStorage.getItem('risks')) || []);\r\n  },\r\n  async getByCompanyId(companyId) {\r\n    const list = await this.getList();\r\n    return Promise.resolve(getByCompanyId(companyId, list));\r\n  },\r\n  async saveItem(item) {\r\n    const list = await this.getList();\r\n    const updatedList = [...list, item];\r\n    return this.saveList(updatedList);\r\n  },\r\n  async updateItem(item) {\r\n    const list = await this.getList();\r\n    const updatedList = list.map((i) => {\r\n      if (getId(i) !== getId(item)) {\r\n        return i;\r\n      }\r\n\r\n      return item;\r\n    });\r\n    return this.saveList(updatedList);\r\n  },\r\n  saveList(list) {\r\n    localStorage.setItem('risks', formatList(list));\r\n    return Promise.resolve();\r\n  },\r\n});\r\n\r\nexport default RisksStore;\r\n\r\n","import { create, update } from \"../models/Risk\";\r\n\r\nconst getRandomInt = (min, max) => {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min + 1)) + min;\r\n};\r\n\r\nconst RisksService = ({ risksStore }) => {\r\n  let listener;\r\n  return {\r\n    async calculate(companyId) {\r\n      const risk = await risksStore.getByCompanyId(companyId);\r\n\r\n      const value = getRandomInt(10, 100);\r\n\r\n      if (risk) {\r\n        await risksStore.updateItem(update({ value }, risk));\r\n      } else {\r\n        await risksStore.saveItem(create({ value, companyId }));\r\n      }\r\n\r\n      if (listener) {\r\n        listener();\r\n      }\r\n    },\r\n    getList() {\r\n      return risksStore.getList();\r\n    },\r\n    subscribe(l) {\r\n      listener = l;\r\n    },\r\n    unsubscribe() {\r\n      listener = null;\r\n    }\r\n  };\r\n};\r\n\r\nexport default RisksService;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nimport CompaniesTablePage from \"./companies/ui/CompaniesTablePage\";\r\nimport EditCompanyPage from \"./companies/ui/EditCompanyPage\";\r\nimport CreateCompanyPage from \"./companies/ui/CreateCompanyPage\";\r\nimport CompaniesStore from \"./companies/domain/data/CompaniesStore\";\r\nimport CompaniesService from \"./companies/domain/services/CompaniesService\";\r\nimport LoginPage from \"./auth/ui/LoginPage\";\r\nimport SecureRoute from \"./auth/ui/SecureRoute\";\r\nimport AppContext from './AppContext';\r\nimport RisksStore from \"./risks/domain/data/RisksStore\";\r\nimport RisksService from \"./risks/domain/services/RisksService\";\r\n\r\nimport \"./App.css\";\r\n\r\n\r\nconst companiesStore = CompaniesStore({ localStorage });\r\nconst companiesService = CompaniesService({ companiesStore });\r\nconst risksStore = RisksStore({ localStorage });\r\nconst risksService = RisksService({ risksStore });\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <AppContext.Provider\r\n        value={{ services: { companies: companiesService, risks: risksService } }}\r\n      >\r\n        <Router>\r\n          <Switch>\r\n            <Route path=\"/login\" component={LoginPage}/>\r\n\r\n            <SecureRoute>\r\n              <Route exact path=\"/\" component={CompaniesTablePage}/>\r\n              <Route exact path=\"/company/\" component={CreateCompanyPage}/>\r\n              <Route path=\"/company/:id\" component={EditCompanyPage}/>\r\n            </SecureRoute>\r\n          </Switch>\r\n        </Router>\r\n      </AppContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}