{"version":3,"sources":["auth/domain/services/logout.js","menu/ui/AppMenuContext.js","menu/ui/AppMenu.js","SimpleAppBar.js","Page.js","PageWithAppBar.js","companies/ui/constants.js","shared/date/toISOString.js","companies/domain/models/Company.js","shared/date/formatDate.js","companies/ui/table/CompaniesTableItem.js","risks/domain/models/Risk.js","risks/domain/models/RisksCollection.js","companies/ui/table/CompaniesTable.js","AppContext.js","companies/ui/CompaniesTablePage.js","FormPage.js","form/ui/validators.js","companies/ui/form/CompanyForm.js","companies/ui/EditCompanyPage.js","companies/ui/CreateCompanyPage.js","companies/domain/data/CompaniesStore.js","companies/domain/services/CompaniesService.js","auth/domain/errors/UserNotFoundError.js","auth/domain/errors/IncorrectPasswordError.js","auth/domain/services/authenticate.js","auth/ui/form/LoginForm.js","auth/ui/LoginPage.js","auth/domain/services/isAuthenticated.js","auth/ui/SecureRoute.js","risks/domain/data/RisksStore.js","risks/domain/services/RisksService.js","App.js","serviceWorker.js","index.js"],"names":["logout","localStorage","removeItem","AppMenuContext","createContext","openMenu","AppMenu","_ref","classes","children","history","_useState","useState","_useState2","Object","slicedToArray","isOpened","setIsOpened","react_default","a","createElement","ui_AppMenuContext","Provider","value","Drawer_default","open","onClose","List_default","className","list","ListItem_default","button","onClick","replace","pathname","defaultProps","withRouter","withStyles","width","SimpleAppBar","props","title","useContext","Fragment","AppBar_default","position","Toolbar_default","IconButton_default","menuButton","color","aria-label","Menu_default","Typography_default","variant","ui_AppMenu","theme","flexGrow","marginLeft","marginRight","buttonIconLeft","spacing","unit","root","display","flexFlow","height","classnames","PageWithAppBar","appBar","isLoading","src_Page","gridContainer","CircularProgress_default","progress","src_SimpleAppBar","maxHeight","overflow","alignSelf","margin","PropTypes","shape","charterCapital","number","isRequired","id","string","name","lastUpdated","instanceOf","Date","foundationDate","toISOString","date","getId","_ref3","getName","_ref4","getFoundationDate","_ref5","formatDate","format","CompaniesTableItem","company","onRecalculate","risk","companyId","TableRow_default","TableCell_default","component","scope","align","concat","Tooltip_default","react_router_dom","to","Edit_default","fontSize","Refresh_default","create","cuid","createdDate","lastUpdatedDate","update","_ref2","objectSpread","getByCompanyId","risks","find","CompaniesTable","companies","onAddButtonClick","Paper_default","Table_default","table","TableHead_default","TableBody_default","map","key","Fab_default","fab","Add_default","overflowX","minWidth","bottom","right","AppContext","services","CompaniesTablePage","state","setState","_useContext$services","companiesService","risksService","fetchCompanies","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","getCompanies","sent","stop","apply","this","arguments","fetchRisks","_callee2","_context2","getList","useEffect","subscribe","unsubscribe","src_PageWithAppBar","table_CompaniesTable","push","categoryId","calculate","justifyContent","paddingTop","formContainer","flex","maxWidth","restProps","objectWithoutProperties","assign","Grid_default","container","direction","Typography","item","required","Boolean","undefined","isDataValid","isValid","CompanyForm","onReset","onSubmit","formattedCompany","useMemo","react_final_form_es","initialValues","values","Number","handleSubmit","submitting","validate","input","_ref3$meta","meta","error","touched","TextField_default","autoFocus","fullWidth","helperText","label","_ref4$meta","placeholder","_ref5$meta","type","justify","Button_default","disabled","EditCompanyPage","match","params","companyName","fetchCompany","result","getCompanyById","finish","editCompany","_x","src_FormPage","e","preventDefault","CreateCompanyPage","createCompany","stopPropagation","CompaniesStore","_ref$parseList","parseList","JSON","parse","_ref$formatList","formatList","stringify","Promise","resolve","getItem","getById","_getById","abrupt","saveItem","_saveItem","updatedList","toConsumableArray","saveList","_x2","updateItem","_updateItem","_callee3","_context3","i","_x3","setItem","CompaniesService","companiesStore","data","updatedCompany","UserNotFoundError","login","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","Error","IncorrectPasswordError","authenticate","reject","password","LoginForm","submitError","alignContent","xs","form","t0","message","defineProperty","FORM_ERROR","paragraph","form_LoginForm","isAuthenticated","SecureRoute","react_router","RisksStore","_getByCompanyId2","RisksService","listener","risksStore","_calculate","min","max","Math","ceil","floor","random","l","App","src_AppContext","path","LoginPage","ui_SecureRoute","exact","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.78a5c208.chunk.js","sourcesContent":["function logout() {\n  localStorage.removeItem('isAuthenticated');\n}\n\nexport default logout;\n","import { createContext } from 'react';\n\nconst AppMenuContext = createContext({ openMenu: null });\n\nexport default AppMenuContext;\n","import React, { useState } from \"react\";\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport List from \"@material-ui/core/List/index\";\nimport ListItem from \"@material-ui/core/ListItem/index\";\nimport Drawer from \"@material-ui/core/Drawer/index\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nimport logout from \"../../auth/domain/services/logout\";\n\nimport AppMenuContext from './AppMenuContext';\n\n\nconst styles = {\n  list: {\n    width: '250px',\n  },\n};\n\nfunction AppMenu({ classes, children, history }) {\n  const [isOpened, setIsOpened] = useState(false);\n\n  const openMenu = () => {\n    setIsOpened(true);\n  };\n\n  const onLogoutClick = () => {\n    logout();\n    history.replace({ pathname: '/login' });\n  };\n\n  return (\n    <AppMenuContext.Provider\n      value={{\n        openMenu,\n      }}\n    >\n      <Drawer\n        open={isOpened}\n        onClose={() => setIsOpened(false)}\n      >\n        <List className={classes.list}>\n          <ListItem button onClick={onLogoutClick}>\n            Logout\n          </ListItem>\n        </List>\n      </Drawer>\n      { children }\n    </AppMenuContext.Provider>\n  )\n}\n\n\nAppMenu.propTypes = {\n  classes: PropTypes.object.isRequired,\n  onLogout: PropTypes.func,\n  open: PropTypes.bool,\n};\n\nAppMenu.defaultProps = {\n  open: false,\n};\n\nexport default withRouter(withStyles(styles)(AppMenu));\n","import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport SimpleDrawer from \"./menu/ui/AppMenu\";\nimport AppMenuContext from \"./menu/ui/AppMenuContext\";\n\nconst styles = theme => ({\n  title: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  buttonIconLeft: {\n    marginRight: theme.spacing.unit\n  }\n});\n\nfunction SimpleAppBar(props) {\n  const { classes, title } = props;\n  const { openMenu } = useContext(AppMenuContext);\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"Menu\"\n            onClick={openMenu}\n          >\n            <MenuIcon/>\n          </IconButton>\n          <Typography variant=\"h6\" color=\"inherit\" className={classes.title}>\n            {title}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <SimpleDrawer />\n    </>\n  );\n}\n\nSimpleAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  title: PropTypes.string\n};\n\nSimpleAppBar.defaultProps = {\n  title: \"Logistics Risks Calculator\"\n};\n\nexport default withStyles(styles)(SimpleAppBar);\n","import React from 'react';\nimport classnames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\n\n\nconst styles = {\n  root: {\n    display: 'flex',\n    flexFlow: 'column nowrap',\n    flexGrow: 1,\n    height: '100%',\n  },\n};\n\nfunction Page({ className, classes, children }) {\n  return <div className={classnames(classes.root, className)}>{ children }</div>\n}\n\nexport default withStyles(styles)(Page);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nimport SimpleAppBar from './SimpleAppBar';\nimport Page from './Page';\n\n\nconst styles = {\n  gridContainer: {\n    display: 'flex',\n    flexGrow: 1,\n    maxHeight: '100%',\n    overflow: 'auto',\n  },\n  progress: {\n    alignSelf: 'center',\n    margin: 'auto',\n  },\n};\n\n\nfunction PageWithAppBar({ appBar, className, classes, children, isLoading }) {\n  return (\n    <Page className={className}>\n      { appBar }\n      <div className={classes.gridContainer}>\n        {isLoading ? <CircularProgress className={classes.progress}/> : children}\n      </div>\n    </Page>\n  )\n}\n\nPageWithAppBar.propTypes = {\n  appBar: PropTypes.node,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  classes: PropTypes.object.isRequired,\n  isLoading: PropTypes.bool,\n};\n\nPageWithAppBar.defaultProps = {\n  appBar: <SimpleAppBar />,\n  isLoading: false,\n};\n\nexport default withStyles(styles)(PageWithAppBar);\n","import PropTypes from 'prop-types';\n\nexport const COMPANY_SHAPE = PropTypes.shape({\n  charterCapital: PropTypes.number.isRequired,\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  lastUpdated: PropTypes.instanceOf(Date),\n  foundationDate: PropTypes.string.isRequired,\n});\n","export default function toISOString(date) {\n  return date.toISOString();\n}\n","import cuid from 'cuid';\nimport toISOString from \"../../../shared/date/toISOString\";\n\n\nexport const create = ({ name, foundationDate, charterCapital }) => ({\n  id: cuid(),\n  charterCapital,\n  foundationDate,\n  lastUpdatedDate: null,\n  name,\n  createdDate: toISOString(new Date()),\n});\n\nexport const update = ({ name, foundationDate, charterCapital }, company) => ({\n  ...company,\n  charterCapital,\n  foundationDate,\n  lastUpdatedDate: toISOString(new Date()),\n  name,\n});\n\nexport const getId = ({ id }) => id;\n\nexport const getName = ({ name }) => name;\n\nexport const getFoundationDate = ({ foundationDate }) => foundationDate;\n","import format from \"date-fns/format\";\n\nexport default function formatDate(date) {\n  return format(date, 'MM/DD/YYYY');\n}\n","import React from \"react\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { Link } from \"react-router-dom\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport EditIcon from '@material-ui/icons/Edit';\n\nimport formatDate from \"../../../shared/date/formatDate\";\n\nimport { getFoundationDate, getId, getName } from \"../../domain/models/Company\";\n\n\nexport default function CompaniesTableItem({ company, onRecalculate, risk }) {\n  const companyId = getId(company);\n  return (\n    <TableRow>\n      <TableCell component=\"th\" scope=\"row\">\n        {getName(company)}\n      </TableCell>\n      <TableCell align=\"center\">{ risk ? `${risk.value}%` : '-' }</TableCell>\n      <TableCell align=\"center\">{formatDate(getFoundationDate(company))}</TableCell>\n      <TableCell align=\"right\">\n        <Tooltip title=\"Edit\">\n          <Link to={`/company/${getId(company)}`}>\n            <IconButton aria-label=\"Recalculate\">\n              <EditIcon fontSize=\"small\"/>\n            </IconButton>\n          </Link>\n        </Tooltip>\n        <Tooltip title=\"Recalculate\">\n          <IconButton aria-label=\"Recalculate\" onClick={() => onRecalculate(companyId)}>\n            <RefreshIcon fontSize=\"small\"/>\n          </IconButton>\n        </Tooltip>\n      </TableCell>\n    </TableRow>\n  );\n}\n","import cuid from \"cuid\";\n\nimport toISOString from \"../../../shared/date/toISOString\";\n\n\nexport const create = ({ companyId, value }) => ({\n  id: cuid(),\n  value,\n  companyId,\n  createdDate: toISOString(new Date()),\n  lastUpdatedDate: null,\n});\n\nexport const update = ({ value }, risk) => ({\n  ...risk,\n  value,\n  lastUpdatedDate: toISOString(new Date()),\n});\n\nexport const getId = ({ id }) => id;\n\nexport const getCompanyId = ({ companyId }) => companyId;\n\nexport const getValue = ({ value }) => value;\n","import { getCompanyId } from \"./Risk\";\n\nexport const getByCompanyId = (companyId, risks) => risks.find(risk => getCompanyId(risk) === companyId);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles/index\";\nimport Table from \"@material-ui/core/Table/index\";\nimport TableBody from \"@material-ui/core/TableBody/index\";\nimport TableCell from \"@material-ui/core/TableCell/index\";\nimport TableHead from \"@material-ui/core/TableHead/index\";\nimport TableRow from \"@material-ui/core/TableRow/index\";\nimport Fab from \"@material-ui/core/Fab/index\";\nimport Paper from \"@material-ui/core/Paper/index\";\nimport AddIcon from \"@material-ui/icons/Add\";\n\nimport { COMPANY_SHAPE } from \"../constants\";\nimport { getId } from \"../../domain/models/Company\";\nimport CompaniesTableItem from \"./CompaniesTableItem\";\nimport { getByCompanyId } from \"../../../risks/domain/models/RisksCollection\";\n\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    overflowX: \"auto\"\n  },\n  table: {\n    minWidth: 700\n  },\n  fab: {\n    position: \"absolute\",\n    bottom: theme.spacing.unit * 4,\n    right: theme.spacing.unit * 4\n  }\n});\n\nfunction CompaniesTable(props) {\n  const { classes, companies, onAddButtonClick, onRecalculate, risks } = props;\n\n  return (\n    <Paper className={classes.root}>\n      <Table className={classes.table}>\n        <TableHead>\n          <TableRow>\n            <TableCell>Company name</TableCell>\n            <TableCell align=\"center\">Risk</TableCell>\n            <TableCell align=\"center\">Foundation date</TableCell>\n            <TableCell/>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {companies.map((company) => {\n            const companyId = getId(company);\n            return (\n              <CompaniesTableItem\n                company={company}\n                key={companyId}\n                onRecalculate={onRecalculate}\n                risk={getByCompanyId(companyId, risks)}\n              />\n            );\n          })\n          }\n        </TableBody>\n      </Table>\n      <Fab\n        className={classes.fab}\n        color=\"primary\"\n        onClick={onAddButtonClick}\n      >\n        <AddIcon/>\n      </Fab>\n    </Paper>\n  );\n}\n\nCompaniesTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n  companies: PropTypes.arrayOf(COMPANY_SHAPE),\n  onAddButtonClick: PropTypes.func,\n  onRecalculate: PropTypes.func,\n  risks: PropTypes.array\n};\n\nCompaniesTable.defaultProps = {\n  companies: [],\n  risks: []\n};\n\nexport default withStyles(styles)(CompaniesTable);\n","import { createContext } from 'react';\n\n\nconst AppContext = createContext({\n  services: {},\n});\n\nexport default AppContext;\n","import React, { useContext, useEffect, useState } from \"react\";\n\nimport PageWithAppBar from \"../../PageWithAppBar\";\n\nimport CompaniesTable from \"./table/CompaniesTable\";\nimport AppMenu from \"../../menu/ui/AppMenu\";\nimport AppContext from \"../../AppContext\";\n\n\nfunction CompaniesTablePage({ history }) {\n  const [state, setState] = useState({\n    companies: [],\n    isLoading: false,\n    risks: [],\n  });\n  const { services: { companies: companiesService, risks: risksService } } = useContext(AppContext);\n\n  const fetchCompanies = async () => {\n    setState({ isLoading: true });\n    const companies = await companiesService.getCompanies();\n    setState({\n      companies,\n      isLoading: false\n    });\n  };\n\n  const fetchRisks = async () => {\n    const risks = await risksService.getList();\n    setState(state => ({ ...state, risks }));\n  };\n\n  useEffect(() => {\n    fetchCompanies();\n    risksService.subscribe(() => {\n      fetchRisks();\n    });\n    fetchRisks();\n    return () => {\n      risksService.unsubscribe();\n    };\n  }, []);\n\n  const onAddButtonClick = () => {\n    history.push({ pathname: '/company/' });\n  };\n\n  const onRecalculate = (categoryId) => {\n    risksService.calculate(categoryId);\n  };\n\n  return (\n    <AppMenu>\n      <PageWithAppBar\n        isLoading={state.isLoading}\n      >\n        <CompaniesTable\n          companies={state.companies}\n          onAddButtonClick={onAddButtonClick}\n          onRecalculate={onRecalculate}\n          risks={state.risks}\n        />\n      </PageWithAppBar>\n    </AppMenu>\n  );\n}\n\nexport default CompaniesTablePage;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nimport PageWithAppBar from \"./PageWithAppBar\";\n\n\nconst styles = ({ spacing }) => ({\n  gridContainer: {\n    justifyContent: 'center',\n    paddingTop: spacing.unit * 4,\n  },\n  formContainer: {\n    flex: 1,\n    maxWidth: '360px',\n  },\n});\n\nfunction FormPage({ children, classes, isLoading, title, ...restProps }) {\n  return (\n    <PageWithAppBar\n      {...restProps}\n      classes={{ gridContainer: classes.gridContainer }}\n      isLoading={isLoading}\n    >\n      <Grid\n        className={classes.formContainer}\n        container\n        direction=\"column\"\n        spacing={40}\n      >\n        <Grid\n          component={Typography}\n          item\n          variant=\"title\"\n        >\n          {title}\n        </Grid>\n        <Grid item>\n          {isLoading ? null : children}\n        </Grid>\n      </Grid>\n    </PageWithAppBar>\n  );\n}\n\nexport default withStyles(styles)(FormPage);\n","import isValid from 'date-fns/is_valid';\n\nexport const required = (value) => Boolean(value) ? undefined : 'Value is required';\nexport const isDataValid = (value) => isValid(new Date(value)) ? undefined : 'Date should be in format MM/DD/YYYY';\n","import React, { useMemo } from \"react\";\nimport PropTypes from 'prop-types';\nimport Grid from \"@material-ui/core/Grid\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { Form, Field } from \"react-final-form\";\n\nimport { required, isDataValid } from '../../../form/ui/validators';\n\nimport { getFoundationDate } from \"../../domain/models/Company\";\n\nimport { COMPANY_SHAPE } from \"../constants\";\nimport formatDate from \"../../../shared/date/formatDate\";\n\n\nexport default function CompanyForm({ company, onReset, onSubmit }) {\n  const onSubmitAdapter = (values) => {\n    onSubmit({\n      ...values,\n      foundationDate: new Date(values.foundationDate),\n      charterCapital: Number(values.charterCapital),\n    });\n  };\n\n  const formattedCompany = useMemo(() => {\n    if (!company) {\n      return company;\n    }\n\n    return {\n      ...company,\n      foundationDate: formatDate(getFoundationDate(company)),\n    };\n  }, [company]);\n\n  return (\n    <Form initialValues={formattedCompany} onSubmit={onSubmitAdapter} >\n      {({ handleSubmit, submitting }) => (\n        <Grid\n          component=\"form\"\n          container\n          direction=\"column\"\n          onReset={onReset}\n          onSubmit={handleSubmit}\n          spacing={40}\n        >\n          <Grid item>\n            <Field\n              name=\"name\"\n              validate={required}\n            >\n              {({ input, meta: { error, touched } }) => (\n                <TextField\n                  {...input}\n                  autoFocus\n                  error={touched && Boolean(error)}\n                  fullWidth\n                  helperText={touched && error}\n                  label=\"Name\"\n                />\n              )}\n            </Field>\n          </Grid>\n          <Grid item>\n            <Field\n              name=\"foundationDate\"\n              validate={value => required(value) || isDataValid(value)}\n            >\n              {({ input, meta: { error, touched } }) => (\n                <TextField\n                  {...input}\n                  error={touched && Boolean(error)}\n                  fullWidth\n                  helperText={touched && error}\n                  label=\"Foundation date\"\n                  placeholder=\"2/25/2012\"\n                />\n              )}\n            </Field>\n          </Grid>\n          <Grid item>\n            <Field\n              name=\"charterCapital\"\n              validate={required}\n            >\n              {({ input, meta: { error, touched } }) => (\n                <TextField\n                  {...input}\n                  error={touched && Boolean(error)}\n                  fullWidth\n                  helperText={touched && error}\n                  label=\"Charter capital\"\n                  type=\"number\"\n                />\n              )}\n            </Field>\n          </Grid>\n          <Grid item>\n            <Grid\n              container\n              justify=\"flex-end\"\n              spacing={16}\n            >\n              <Grid item>\n                <Button type=\"reset\">\n                  Cancel\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button\n                  color=\"primary\"\n                  disabled={submitting}\n                  type=\"submit\"\n                  variant=\"contained\"\n                >\n                  Submit\n                </Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      )}\n    </Form>\n  );\n}\n\nCompanyForm.propTypes = {\n  company: COMPANY_SHAPE,\n  onReset: PropTypes.func.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n","import React, { useContext, useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport SimpleAppBar from \"../../SimpleAppBar\";\n\nimport AppMenu from \"../../menu/ui/AppMenu\";\nimport FormPage from \"../../FormPage\";\nimport CompanyForm from \"./form/CompanyForm\";\nimport AppContext from \"../../AppContext\";\n\n\nfunction EditCompanyPage({ match, history }) {\n  const [state, setState] = useState({\n    company: null,\n    isLoading: true\n  });\n  const { services: { companies: companiesService } } = useContext(AppContext);\n\n  const companyId = match.params.id;\n  const { company, isLoading } = state;\n\n  const companyName = isLoading ? '' : company.name;\n\n  const fetchCompany = async () => {\n    setState(state => ({ ...state, isLoading: true }));\n    try {\n      const result = await companiesService.getCompanyById(companyId);\n      setState(state => ({\n        ...state,\n        company: result\n      }));\n    } finally {\n      setState(state => ({\n        ...state,\n        isLoading: false\n      }));\n    }\n  };\n\n  useEffect(() => {\n    fetchCompany();\n  }, []);\n\n  const appBar = (\n    <SimpleAppBar\n      title={isLoading ? \"Please wait...\" : companyName}\n    />\n  );\n\n  const onReset = (e) => {\n    e.preventDefault();\n    history.replace({ pathname: '/' });\n  };\n\n  const onSubmit = async (values) => {\n    await companiesService.editCompany(company, values);\n    history.replace({ pathname: '/' });\n  };\n\n  return (\n    <AppMenu>\n      <FormPage\n        appBar={appBar}\n        isLoading={state.isLoading}\n        title={`Edit ${companyName}`}\n      >\n        <CompanyForm\n          company={company}\n          onReset={onReset}\n          onSubmit={onSubmit}\n        />\n      </FormPage>\n    </AppMenu>\n  );\n}\n\nEditCompanyPage.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string.isRequired\n    }).isRequired\n  }).isRequired,\n  history: PropTypes.shape({\n    goBack: PropTypes.func,\n  }).isRequired,\n};\n\nexport default EditCompanyPage;\n","import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport SimpleAppBar from \"../../SimpleAppBar\";\n\nimport AppMenu from \"../../menu/ui/AppMenu\";\nimport FormPage from \"../../FormPage\";\nimport CompanyForm from \"./form/CompanyForm\";\nimport AppContext from \"../../AppContext\";\n\n\nfunction CreateCompanyPage({ history }) {\n  const { services: { companies } } = useContext(AppContext);\n\n  const appBar = (\n    <SimpleAppBar\n      title=\"Create new company\"\n    />\n  );\n\n  const onReset = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    history.replace('/');\n  };\n\n  const onSubmit = async (values) => {\n    await companies.createCompany(values);\n    history.replace('/');\n  };\n\n  return (\n    <AppMenu>\n      <FormPage\n        appBar={appBar}\n        title={`Create new company`}\n      >\n        <CompanyForm\n          onReset={onReset}\n          onSubmit={onSubmit}\n        />\n      </FormPage>\n    </AppMenu>\n  );\n}\n\nCreateCompanyPage.propTypes = {\n  history: PropTypes.shape({\n    goBack: PropTypes.func,\n  }).isRequired,\n};\n\nexport default CreateCompanyPage;\n","import { getId } from \"../models/Company\";\n\n\nconst CompaniesStore = ({ localStorage, parseList = JSON.parse, formatList = JSON.stringify }) => ({\n  getList() {\n    return Promise.resolve(parseList(localStorage.getItem('companies')) || []);\n  },\n  async getById(id) {\n    const list = await this.getList();\n    return Promise.resolve(list.find(item => getId(item) === id));\n  },\n  async saveItem(item) {\n    const list = await this.getList();\n    const updatedList = [...list, item];\n    return this.saveList(updatedList);\n  },\n  async updateItem(item) {\n    const list = await this.getList();\n    const updatedList = list.map((i) => {\n      if (getId(i) !== getId(item)) {\n        return i;\n      }\n\n      return item;\n    });\n    return this.saveList(updatedList);\n  },\n  saveList(list) {\n    localStorage.setItem('companies', formatList(list));\n    return Promise.resolve();\n  },\n});\n\nexport default CompaniesStore;\n","import { create, update } from \"../models/Company\";\n\nconst CompaniesService = ({ companiesStore }) => ({\n  createCompany: (data) => {\n    const company = create(data);\n    return companiesStore.saveItem(company);\n  },\n  editCompany: (company, data) => {\n    const updatedCompany = update(data, company);\n    return companiesStore.updateItem(updatedCompany);\n  },\n  getCompanies: () => companiesStore.getList(),\n  getCompanyById: (id) => companiesStore.getById(id),\n});\n\nexport default CompaniesService;\n","export default class UserNotFoundError extends Error {\n  constructor(login) {\n    super(`User \"${login}\" doesn't exist`);\n  }\n}\n","export default class IncorrectPasswordError extends Error {\n  constructor() {\n    super(`Invalid password`);\n  }\n}\n","import UserNotFoundError from '../errors/UserNotFoundError';\nimport IncorrectPasswordError from \"../errors/IncorrectPasswordError\";\n\nfunction authenticate(values) {\n  return new Promise((resolve, reject) => {\n    const { login, password } = values;\n\n    if (login !== \"admin\") {\n      reject(new UserNotFoundError(login));\n      return;\n    } else if (password !== \"admin\") {\n      reject(new IncorrectPasswordError());\n      return;\n    }\n\n    localStorage.setItem('isAuthenticated', 'true');\n\n    resolve();\n  });\n}\n\nexport default authenticate;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Form, Field } from \"react-final-form\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { required } from '../../../form/ui/validators';\n\n\nfunction LoginForm({ className, onSubmit }) {\n  return (\n    <Form onSubmit={onSubmit}>\n      {({ handleSubmit, submitError, submitting }) => (\n        <Grid\n          alignContent=\"center\"\n          className={className}\n          component=\"form\"\n          container\n          onSubmit={handleSubmit}\n          spacing={40}\n        >\n          {submitError ? (\n            <Grid\n              color=\"error\"\n              component={Typography}\n              item\n              xs={12}\n            >\n              {submitError}\n            </Grid>\n          ) : null}\n\n          <Grid item xs={12}>\n            <Field\n              name=\"login\"\n              validate={required}\n            >\n              {({ input, meta: { error, touched, submitError } }) => (\n                <TextField\n                  {...input}\n                  autoFocus\n                  error={touched && Boolean(error || submitError)}\n                  fullWidth\n                  helperText={touched && (error || submitError)}\n                  placeholder=\"Login\"\n                />\n              )}\n            </Field>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Field\n              name=\"password\"\n              validate={required}\n            >\n              {({ input, meta: { error, touched } }) => (\n                <TextField\n                  {...input}\n                  error={touched && Boolean(error)}\n                  fullWidth\n                  helperText={touched && error}\n                  placeholder=\"Password\"\n                  type=\"password\"\n                />\n              )}\n            </Field>\n          </Grid>\n\n          <Grid item xs={12}>\n            <Button\n              color=\"primary\"\n              disabled={submitting}\n              fullWidth\n              type=\"submit\"\n              variant=\"contained\"\n            >\n              Submit\n            </Button>\n          </Grid>\n        </Grid>\n      )}\n    </Form>\n  );\n}\n\nLoginForm.propTypes = {\n  className: PropTypes.string,\n  onSubmit: PropTypes.func.isRequired\n};\n\nLoginForm.defaultProps = {\n  className: \"\"\n};\n\nexport default LoginForm;\n","import React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { FORM_ERROR } from \"final-form\";\n\nimport Page from '../../Page';\n\nimport authenticate from '../domain/services/authenticate';\n\nimport LoginForm from './form/LoginForm';\nimport UserNotFoundError from \"../domain/errors/UserNotFoundError\";\nimport IncorrectPasswordError from \"../domain/errors/IncorrectPasswordError\";\n\n\nconst styles = (theme) => ({\n  root: {\n    paddingTop: theme.spacing.unit * 8,\n  },\n  form: {\n    margin: `${theme.spacing.unit * 8}px auto`,\n    maxWidth: '360px',\n  }\n});\n\nfunction LoginPage({ classes, history }) {\n  const onSubmit = async (values) => {\n    try {\n      await authenticate(values);\n      history.replace({ pathname: '/' });\n    } catch(e) {\n      if (e instanceof UserNotFoundError) {\n        return { login: e.message };\n      } else if (e instanceof IncorrectPasswordError) {\n        return { [FORM_ERROR]: 'Incorrect credentials' };\n      }\n\n      throw e;\n    }\n  };\n\n  return (\n    <Page classes={{ root: classes.root }}>\n      <Typography\n        align=\"center\"\n        paragraph={false}\n        variant=\"title\"\n      >\n        Welcome\n      </Typography>\n\n      <Typography\n        align=\"center\"\n        color=\"textSecondary\"\n      >\n        to\n      </Typography>\n\n      <Typography\n        align=\"center\"\n        color=\"primary\"\n        variant=\"headline\"\n      >\n        Logistics Risks Calculator\n      </Typography>\n\n      <LoginForm\n        className={classes.form}\n        onSubmit={onSubmit}\n      />\n    </Page>\n  );\n}\n\nexport default withStyles(styles)(LoginPage);\n","function isAuthenticated() {\n  return localStorage.getItem('isAuthenticated') === 'true';\n}\n\nexport default isAuthenticated;\n","import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport isAuthenticated from \"../domain/services/isAuthenticated\";\n\nfunction SecureRoute({ children }) {\n  if (!isAuthenticated()) {\n    return (\n      <Redirect\n        to={{\n          pathname: '/login',\n        }}\n      />\n    )\n  }\n\n  return children;\n}\n\nexport default SecureRoute;\n","import { getId } from \"../models/Risk\";\nimport { getByCompanyId } from \"../models/RisksCollection\";\n\n\nconst RisksStore = ({ localStorage, parseList = JSON.parse, formatList = JSON.stringify }) => ({\n  getList() {\n    return Promise.resolve(parseList(localStorage.getItem('risks')) || []);\n  },\n  async getByCompanyId(companyId) {\n    const list = await this.getList();\n    return Promise.resolve(getByCompanyId(companyId, list));\n  },\n  async saveItem(item) {\n    const list = await this.getList();\n    const updatedList = [...list, item];\n    return this.saveList(updatedList);\n  },\n  async updateItem(item) {\n    const list = await this.getList();\n    const updatedList = list.map((i) => {\n      if (getId(i) !== getId(item)) {\n        return i;\n      }\n\n      return item;\n    });\n    return this.saveList(updatedList);\n  },\n  saveList(list) {\n    localStorage.setItem('risks', formatList(list));\n    return Promise.resolve();\n  },\n});\n\nexport default RisksStore;\n\n","import { create, update } from \"../models/Risk\";\n\nconst getRandomInt = (min, max) => {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n};\n\nconst RisksService = ({ risksStore }) => {\n  let listener;\n  return {\n    async calculate(companyId) {\n      const risk = await risksStore.getByCompanyId(companyId);\n\n      const value = getRandomInt(10, 100);\n\n      if (risk) {\n        await risksStore.updateItem(update({ value }, risk));\n      } else {\n        await risksStore.saveItem(create({ value, companyId }));\n      }\n\n      if (listener) {\n        listener();\n      }\n    },\n    getList() {\n      return risksStore.getList();\n    },\n    subscribe(l) {\n      listener = l;\n    },\n    unsubscribe() {\n      listener = null;\n    }\n  };\n};\n\nexport default RisksService;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport CompaniesTablePage from \"./companies/ui/CompaniesTablePage\";\nimport EditCompanyPage from \"./companies/ui/EditCompanyPage\";\nimport CreateCompanyPage from \"./companies/ui/CreateCompanyPage\";\nimport CompaniesStore from \"./companies/domain/data/CompaniesStore\";\nimport CompaniesService from \"./companies/domain/services/CompaniesService\";\nimport LoginPage from \"./auth/ui/LoginPage\";\nimport SecureRoute from \"./auth/ui/SecureRoute\";\nimport AppContext from './AppContext';\nimport RisksStore from \"./risks/domain/data/RisksStore\";\nimport RisksService from \"./risks/domain/services/RisksService\";\n\nimport \"./App.css\";\n\n\nconst companiesStore = CompaniesStore({ localStorage });\nconst companiesService = CompaniesService({ companiesStore });\nconst risksStore = RisksStore({ localStorage });\nconst risksService = RisksService({ risksStore });\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppContext.Provider\n        value={{ services: { companies: companiesService, risks: risksService } }}\n      >\n        <Router>\n          <Switch>\n            <Route path=\"/login\" component={LoginPage}/>\n\n            <SecureRoute>\n              <Route exact path=\"/\" component={CompaniesTablePage}/>\n              <Route exact path=\"/company/\" component={CreateCompanyPage}/>\n              <Route path=\"/company/:id\" component={EditCompanyPage}/>\n            </SecureRoute>\n          </Switch>\n        </Router>\n      </AppContext.Provider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}